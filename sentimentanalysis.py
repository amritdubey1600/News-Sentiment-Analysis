# -*- coding: utf-8 -*-
"""SentimentAnalysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18VjZ4opF_ZPRaNP8mTLhhALpQJ-GhZQL
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd
df = pd.read_csv("/content/sentiment140.csv", encoding="ISO-8859-1", header=None)
df.columns = ["Sentiment", "ID", "Date", "Query", "User", "Tweet"]
print(df.head(5))

news_keywords = [
    "breaking", "news", "report", "announces", "update", "headline", "exclusive",
    "alert", "developing", "reveals", "confirms", "statement", "official",
    "press release", "declares", "exposes", "investigation", "insight",
    "coverage", "highlights", "releases", "revealed", "scandal", "leak",
    "crisis", "policy", "government", "authority", "emergency", "forecast",
    "election", "poll", "interview", "speech", "breaking news", "top story"
]

news_tweets = df[df["Tweet"].str.contains("|".join(news_keywords), case=False, na=False)]

news_tweets = news_tweets[~news_tweets["Tweet"].str.startswith("RT")]  # Remove retweets
news_tweets = news_tweets[~news_tweets["Tweet"].str.contains("@")]  # Remove replies
print('News Headlnes Obtained=', len(news_tweets))

from nltk.sentiment import SentimentIntensityAnalyzer
import nltk

nltk.download("vader_lexicon")

# Initialize VADER
sia = SentimentIntensityAnalyzer()

# Apply VADER on extracted news headlines tweets
news_tweets["vader_sentiment"] = news_tweets["Tweet"].apply(lambda x: sia.polarity_scores(x)["compound"])

# Classify Sentiment
news_tweets["vader_label"] = news_tweets["vader_sentiment"].apply(lambda x: "positive" if x > 0.05 else ("negative" if x < -0.05 else "neutral"))

print(news_tweets[["Tweet", "vader_sentiment", "vader_label"]].head())

import matplotlib.pyplot as plt
import seaborn as sns

# Set plot style
sns.set(style="darkgrid")

# Plot VADER Sentiment Distribution
plt.figure(figsize=(12, 5))
sns.countplot(x=news_tweets["vader_label"], palette="coolwarm")
plt.title("VADER Sentiment Distribution")
plt.xlabel("Sentiment")
plt.ylabel("Count")
plt.show()

# Pie chart for VADER sentiment
plt.figure(figsize=(7, 7))
news_tweets["vader_label"].value_counts().plot.pie(
    autopct="%1.1f%%", colors=["lightcoral", "gold", "lightgreen"], startangle=90
)
plt.title("VADER Sentiment Distribution")
plt.ylabel("")  # Hide y-label
plt.show()